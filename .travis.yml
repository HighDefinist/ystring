dist: trusty
sudo: false
language: cpp

matrix:
  include:
  - os: linux
    env: COMPILER=g++-5
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-5','lcov']

  - os: linux
    env: COMPILER=g++-6
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-6','lcov']

  - os: linux
    env: COMPILER=g++-7
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-7','lcov']

  - os: linux
    env: COMPILER=clang++-5.0
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test','llvm-toolchain-trusty-5.0']
        packages: ['clang-5.0','lcov','g++-6']        

  - os: linux
    env: COMPILER=clang++-4.0
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test','llvm-toolchain-trusty-4.0']
        packages: ['clang-4.0','lcov','g++-6']        
        
  - os: linux
    env: COMPILER=clang++-3.9
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['clang-3.9','lcov','g++-6']        
        
  - os: linux
    env: COMPILER=clang++-3.8
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['clang-3.8','lcov','g++-6']        
        
  - os: linux
    env: COMPILER=clang++-3.7
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['clang-3.7','lcov','g++-6']        
        
  - os: linux
    env: COMPILER=clang++-3.6
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['clang-3.6','lcov','g++-6']        
        
  - os: linux
    env: COMPILER=clang++-3.5
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['clang-3.5','lcov','g++-6']        
        
before_install:
  - pip install --user cpp-coveralls

script:
  - CXX=${COMPILER}
  - ./gocoverage.sh

after_success:
    # Creating report
  - cd ${TRAVIS_BUILD_DIR}
  - lcov --directory . --capture --output-file coverage.info # capture coverage info
  - lcov --remove coverage.info '/usr/*' 'include_extra/*' 'test/*' 'tests/*' --output-file coverage.info # filter out system
  - lcov --list coverage.info #debug info
  # Uploading report to CodeCov
  - bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"